#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32744 bytes for Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:184), pid=22452, tid=30728
#
# JRE version: Java(TM) SE Runtime Environment (18.0.2.1+1) (build 18.0.2.1+1-1)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (18.0.2.1+1-1, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -XX:+ShowCodeDetailsInExceptionMessages -agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:58501 -ea -Dfile.encoding=UTF-8 org.testng.remote.RemoteTestNG -serport 58474 -protocol json -d C:\Users\Nischitha h s\eclipse-workspace\Selenium_training_ELF39\test-output C:\Users\Nischitha h s\AppData\Local\Temp\testng-eclipse--1906705562\testng-customsuite.xml

Host: Intel(R) Core(TM) i5-1035G1 CPU @ 1.00GHz, 8 cores, 7G,  Windows 11 , 64 bit Build 22000 (10.0.22000.708)
Time: Sat Nov 19 12:24:11 2022 India Standard Time elapsed time: 53.738215 seconds (0d 0h 0m 53s)

---------------  T H R E A D  ---------------

Current thread (0x000001e7d189b270):  JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=30728, stack(0x00000093d5700000,0x00000093d5800000)]


Current CompileTask:
C2:  53739 1801       4       java.util.Collections$UnmodifiableCollection$1::next (10 bytes)

Stack: [0x00000093d5700000,0x00000093d5800000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x6993aa]
V  [jvm.dll+0x7f46dd]
V  [jvm.dll+0x7f5fee]
V  [jvm.dll+0x7f66a3]
V  [jvm.dll+0x25cf1f]
V  [jvm.dll+0xb8c2f]
V  [jvm.dll+0xb8fa5]
V  [jvm.dll+0x62ba34]
V  [jvm.dll+0x62d10b]
V  [jvm.dll+0x62b594]
V  [jvm.dll+0x22ff78]
V  [jvm.dll+0x22f4d1]
V  [jvm.dll+0x1ba01c]
V  [jvm.dll+0x23ee0a]
V  [jvm.dll+0x23d0f5]
V  [jvm.dll+0x7a6dd1]
V  [jvm.dll+0x7a120a]
V  [jvm.dll+0x698255]
C  [ucrtbase.dll+0x26c0c]
C  [KERNEL32.DLL+0x154e0]
C  [ntdll.dll+0x485b]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x000001e7d676ee30, length=20, elements={
0x000001e7b1855640, 0x000001e7d1873080, 0x000001e7d18749d0, 0x000001e7d188cdd0,
0x000001e7d188f780, 0x000001e7d1892df0, 0x000001e7d1894600, 0x000001e7d189b270,
0x000001e7d18ae7d0, 0x000001e7d1911cd0, 0x000001e7d5cbbf30, 0x000001e7d5cc0a00,
0x000001e7d5cc6210, 0x000001e7d1893c60, 0x000001e7d1895470, 0x000001e7d1894130,
0x000001e7d1893790, 0x000001e7d1894ad0, 0x000001e7d1892920, 0x000001e7d1895940
}

Java Threads: ( => current thread )
  0x000001e7b1855640 JavaThread "main" [_thread_in_vm, id=21064, stack(0x00000093d4900000,0x00000093d4a00000)]
  0x000001e7d1873080 JavaThread "Reference Handler" daemon [_thread_blocked, id=21020, stack(0x00000093d5000000,0x00000093d5100000)]
  0x000001e7d18749d0 JavaThread "Finalizer" daemon [_thread_blocked, id=7264, stack(0x00000093d5100000,0x00000093d5200000)]
  0x000001e7d188cdd0 JavaThread "Signal Dispatcher" daemon [, id=28456]